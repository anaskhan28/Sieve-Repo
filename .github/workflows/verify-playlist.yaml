name: Verify Playlist Submission

on:
  pull_request_target:
    paths:
      - 'playlist.json'

permissions:
  contents: write  # Needed for commenting on PR
  issues: write    # Needed for commenting on issues
  pull-requests: write  # Needed for commenting on PR

jobs:
  verify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install jsonschema requests

      - name: Run verification script
        id: verify
        run: python .github/scripts/verify_playlist.py

      - name: Read verification result
        id: read-result
        run: |
          if [ -f result.txt ]; then
            RESULT=$(<result.txt)
            echo "RESULT<<EOF" >> $GITHUB_ENV
            echo "$RESULT" >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
          else
            echo "RESULT=Verification script did not produce a result file." >> $GITHUB_ENV
          fi

      - name: Comment on PR
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = process.env.RESULT || "❌ Playlist verification failed.";
            const issueNumber = context.payload.pull_request.number;
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            console.log(`Owner: ${owner}, Repo: ${repo}, Issue Number: ${issueNumber}`);
            await github.rest.issues.createComment({
              owner: owner,
              repo: repo,
              issue_number: issueNumber,
              body: output
            });

      - name: Set workflow status
        if: ${{ env.RESULT != '✅ Playlist verification passed! Your submission looks good.' }}
        run: exit 1
